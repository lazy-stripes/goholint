// CB {{.Opcode | printf "%02X"}}: RES {{.Bit}},({{.Register}})			16 cycles
type {{name .}} struct {
	MultiStepsOp
}

func (op *{{name .}}) Tick() (done bool) {
	switch op.step {
	case 0:
		op.cpu.temp8 = op.cpu.MMU.Read(uint(op.cpu.{{.Register}}()))
		op.step++
	case 1:
		op.cpu.temp8 &= ^uint8(1<<{{.Bit}})
		op.cpu.MMU.Write(uint(op.cpu.{{.Register}}()), op.cpu.temp8)
	}
	return true
}

